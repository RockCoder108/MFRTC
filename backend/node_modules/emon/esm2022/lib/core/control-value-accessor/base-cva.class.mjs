export class BaseControlValueAccessor {
    disabled = false;
    _value;
    set value(val) {
        if (this._value !== val) {
            this._value = val;
            this.propagete();
        }
    }
    get value() {
        return this._value;
    }
    /**
     * Call when value has changed programatically
     */
    onChange = (value) => value;
    /**
     * Call when input touched
     */
    onTouch = () => { };
    /**
     * Model -> View changes
     */
    writeValue(obj) { this.value = obj; }
    registerOnChange(fn) { this.onChange = fn; }
    registerOnTouched(fn) { this.onTouch = fn; }
    setDisabledState(isDisabled) { this.disabled = isDisabled; }
    propagete() {
        this.onChange(this.value);
        this.onTouch();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1jdmEuY2xhc3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9saWJyYXJ5L3NyYy9saWIvY29yZS9jb250cm9sLXZhbHVlLWFjY2Vzc29yL2Jhc2UtY3ZhLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sT0FBTyx3QkFBd0I7SUFDMUIsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUNoQixNQUFNLENBQXVCO0lBQ3JDLElBQUksS0FBSyxDQUFDLEdBQXlCO1FBQy9CLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQztZQUN0QixJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztZQUNsQixJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDckIsQ0FBQztJQUNMLENBQUM7SUFDRCxJQUFJLEtBQUs7UUFDTCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQUNEOztPQUVHO0lBQ0gsUUFBUSxHQUFHLENBQUMsS0FBMkIsRUFBd0IsRUFBRSxDQUFDLEtBQUssQ0FBQztJQUN4RTs7T0FFRztJQUNILE9BQU8sR0FBRyxHQUFTLEVBQUUsR0FBRSxDQUFDLENBQUM7SUFFekI7O09BRUc7SUFDSCxVQUFVLENBQUMsR0FBeUIsSUFBVSxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDakUsZ0JBQWdCLENBQUMsRUFBTyxJQUFVLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN2RCxpQkFBaUIsQ0FBQyxFQUFPLElBQVUsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELGdCQUFnQixDQUFFLFVBQW1CLElBQVUsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQ3BFLFNBQVM7UUFDYixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDbkIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgQmFzZUNvbnRyb2xWYWx1ZUFjY2Vzc29yPFQ+IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xyXG4gICAgcHVibGljIGRpc2FibGVkID0gZmFsc2U7XHJcbiAgICBwcml2YXRlIF92YWx1ZTogVCB8IHVuZGVmaW5lZCB8IG51bGw7XHJcbiAgICBzZXQgdmFsdWUodmFsOiBUIHwgdW5kZWZpbmVkIHwgbnVsbCkge1xyXG4gICAgICAgIGlmICh0aGlzLl92YWx1ZSAhPT0gdmFsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3ZhbHVlID0gdmFsO1xyXG4gICAgICAgICAgICB0aGlzLnByb3BhZ2V0ZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGdldCB2YWx1ZSgpOiBUIHwgdW5kZWZpbmVkIHwgbnVsbCB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDYWxsIHdoZW4gdmFsdWUgaGFzIGNoYW5nZWQgcHJvZ3JhbWF0aWNhbGx5XHJcbiAgICAgKi9cclxuICAgIG9uQ2hhbmdlID0gKHZhbHVlOiBUIHwgdW5kZWZpbmVkIHwgbnVsbCk6IFQgfCB1bmRlZmluZWQgfCBudWxsID0+IHZhbHVlO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDYWxsIHdoZW4gaW5wdXQgdG91Y2hlZFxyXG4gICAgICovXHJcbiAgICBvblRvdWNoID0gKCk6IHZvaWQgPT4ge307XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNb2RlbCAtPiBWaWV3IGNoYW5nZXNcclxuICAgICAqL1xyXG4gICAgd3JpdGVWYWx1ZShvYmo6IFQgfCB1bmRlZmluZWQgfCBudWxsKTogdm9pZCB7IHRoaXMudmFsdWUgPSBvYmo7IH1cclxuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IGFueSk6IHZvaWQgeyB0aGlzLm9uQ2hhbmdlID0gZm47IH1cclxuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiBhbnkpOiB2b2lkIHsgdGhpcy5vblRvdWNoID0gZm47IH1cclxuICAgIHNldERpc2FibGVkU3RhdGU/KGlzRGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkIHsgdGhpcy5kaXNhYmxlZCA9IGlzRGlzYWJsZWQ7IH1cclxuICAgIHByaXZhdGUgcHJvcGFnZXRlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMub25DaGFuZ2UodGhpcy52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5vblRvdWNoKCk7XHJcbiAgICB9XHJcbn1cclxuIl19