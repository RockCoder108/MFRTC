import { ControlValueAccessor } from '@angular/forms';
export declare class BaseControlValueAccessor<T> implements ControlValueAccessor {
    disabled: boolean;
    private _value;
    set value(val: T | undefined | null);
    get value(): T | undefined | null;
    /**
     * Call when value has changed programatically
     */
    onChange: (value: T | undefined | null) => T | undefined | null;
    /**
     * Call when input touched
     */
    onTouch: () => void;
    /**
     * Model -> View changes
     */
    writeValue(obj: T | undefined | null): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
    private propagete;
}
